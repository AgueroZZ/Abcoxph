sigmapostplot1
theme_set(theme_classic(base_size = 15))
priorfuncsigma <- function(x) (2/x) * exp(abcox_fit$theta_logprior(-2*log(x)))
margpost1 <- abcox_fit$marginal_hyper
sigmapostplot1 <- margpost1$margpost %>%
mutate(sigma_post = exp(sigmalogmargpost)) %>%
ggplot2::ggplot(ggplot2::aes(x = sigma)) +
ggplot2::theme_classic() +
ggplot2::geom_line(ggplot2::aes(y = sigma_post,colour = "Proposed"),,size = 0.5) +
ggplot2::labs(x = TeX('$\\sigma'),y = "Density") +
ggplot2::geom_line(ggplot2::aes(y = priorfuncsigma(sigma),colour = "Prior"), size = 0.5) +
ggplot2::geom_line(data = datainla_sigma, aes(y = sigma_dens, x = sigma, colour = 'INLA'),size = 0.5) +
ggplot2::scale_colour_manual(values=c("red", "black","blue")) +
ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(), text = element_text(size=20))
sigmapostplot1
simplot+ geom_line(aes(y = exp(meanhere),color = "INLA")) +
geom_line(aes(y = exp(truefunc(x) - truefunc(x[round(RW2BINS/2)])),color = "True")) + labs(x = "u", y =  TeX('$\\gamma(u)$')) +
ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(),text = element_text(size=20))+ scale_colour_manual(values=c("red", "blue","black"))
simplot+ geom_line(aes(y = exp(meanhere),color = "INLA")) +
geom_line(aes(y = exp(truefunc(x) - truefunc(x[round(RW2BINS/2)])),color = "True")) + labs(x = "u", y =  TeX('$\\gamma(u)$')) +
ggplot2::theme(legend.position = c(.9, .85),legend.title = element_blank(),text = element_text(size=20))+ scale_colour_manual(values=c("red", "blue","black"))
simplot+ geom_line(aes(y = exp(meanhere),color = "INLA")) +
geom_line(aes(y = exp(truefunc(x) - truefunc(x[round(RW2BINS/2)])),color = "True")) + labs(x = "u", y =  TeX('$\\gamma(u)$')) +
ggplot2::theme(legend.position = c(.88, .9),legend.title = element_blank(),text = element_text(size=20))+ scale_colour_manual(values=c("red", "blue","black"))
theme_set(theme_classic(base_size = 15))
true <- data_frame(time = tdom[tdom<=728.80400], hazard = haz[tdom<=728.80400])
ggplot(data = true) + aes(x = time, y = hazard) + geom_line() +ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(), text = element_text(size=20)) + labs(x = "t", y = TeX('$h_{0}(t)$'))
#Transform baseline hazard
h0 <- lapply(Inlaresult$marginals.random[["baseline.hazard"]],
function(X) {inla.tmarginal(exp, X)}
)
#Compute summary statistics for plotting
h0.stats <- lapply(h0, inla.zmarginal)
h0.df <- data.frame(t = Inlaresult$summary.random[["baseline.hazard"]]$ID)
h0.df <- cbind(h0.df, do.call(rbind, lapply(h0.stats, unlist)))
rownames(h0.df) <- c()
inla_base <- tibble()
check <- h0.df$t
for (i in c(0:729)) {
if(any(check <= i)){
indx <- which(check <= i)[length(which(check <= i))]
inla_base <- rbind(inla_base,cbind(t=i,h0.df[indx,-1]))
}
}
theme_set(theme_classic(base_size = 15))
ggplot(inla_base, aes(x = t)) + geom_line(aes(y = mean),colour = "black",linetype = "solid",size = 0.5) + geom_ribbon(aes(ymin = quant0.025,ymax = quant0.975),fill = "lightgrey",alpha = .5) + ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(), text = element_text(size=20)) + labs(x = "t", y = TeX('$h_{0}(t)$'))
save(model_fit,file = "SimulationModel.Rdata")
margpost1 <- model_fit$marginal_hyper
thetapostplot1 <- margpost1$margpost %>%
mutate(theta_post = exp(thetalogmargpost)) %>%
ggplot(aes(x = theta)) +
theme_classic() +
geom_line(aes(y = theta_post),colour = "black",size = 0.5) +
geom_line(aes(y = priorfunc(theta)),colour = "black",linetype = "dashed",size = 0.5) +
# coord_cartesian(xlim = c(0,20)) +
labs(y = "Density",x = "") +
theme(text = element_text(size = 15))
thetapostplot1
priorfunc <- function(x) exp(model_data$theta_logprior(x))
priorfuncsigma <- function(x) (2/x) * exp(model_data$theta_logprior(-2*log(x)))
thetapostplot1 <- margpost1$margpost %>%
mutate(theta_post = exp(thetalogmargpost)) %>%
ggplot(aes(x = theta)) +
theme_classic() +
geom_line(aes(y = theta_post),colour = "black",size = 0.5) +
geom_line(aes(y = priorfunc(theta)),colour = "black",linetype = "dashed",size = 0.5) +
# coord_cartesian(xlim = c(0,20)) +
labs(y = "Density",x = "") +
theme(text = element_text(size = 15))
thetapostplot1
thetapostplot1
margpost1
theta_post = exp(margpost1$margpost$thetalogmargpost)
theta_post
theta
theta <- margpost1$margpost$theta
theta
theta <- c(margpost1$margpost$theta)
theta
theta_post
diff(theta)
diff(theta) * theta_post[-1]
sum(diff(theta) * theta_post[-1])
sum(diff(theta) * theta_post[-length(theta_post)])
(sum(diff(theta) * theta_post[-1]) + sum(diff(theta) * theta_post[-length(theta_post)]))/2
margpost1$margpost$sigma
sigma <- c(margpost1$margpost$sigma)
sigma_dens
sigma_dens <- exp(margpost1$margpost$sigmalogmargpost)
sigma_dens
sigmapostplot1 <- margpost1$margpost %>%
mutate(sigma_post = exp(sigmalogmargpost)) %>%
ggplot(aes(x = sigma)) +
theme_classic() +
geom_line(aes(y = sigma_post),colour = "black",size = 0.5) +
geom_line(aes(y = priorfuncsigma(sigma)),colour = "black",linetype = "dashed",size = 0.5) +
labs(x = "",y = "Density") +
theme(text = element_text(size = 15))
sigmapostplot1
sigma_dens
ddd <- data.frame(sigma,sigma_dens)
ddd
arrange(ddd,by = sigma)
(sum(diff(ddd$sigma) * ddd$sigma_dens[-1]) + sum(diff(ddd$sigma) * ddd$sigma_dens[-length(ddd$sigma_dens)]))/2
diff(ddd$sigma)
ddd$sigma
ddd <- arrange(ddd,by = sigma)
(sum(diff(ddd$sigma) * ddd$sigma_dens[-1]) + sum(diff(ddd$sigma) * ddd$sigma_dens[-length(ddd$sigma_dens)]))/2
View(abcox_fit)
library(abcoxph)
options(mc.cores = 2L)
data <- survival::kidney
data <- data.frame(time = data$time, status = data$status, age = data$age,sex = data$sex,GN = ifelse(data$disease == "GN",1,0),AN = ifelse(data$disease == "AN",1,0),PKD = ifelse(data$disease == "PKD",1,0), id = data$id)
prior <- prior_setup(theta_number = 80, theta_grid = c(-2,10),theta_prior_a = .5,theta_prior_u = 2)
model <- abcoxph_setup(time~age + sex + GN + AN + PKD + id(id), cens = "status",data = data)
model_fit <- abcox_fit(model,PARALLEL_EXECUTION = T)
plot_theta(model_fit)
plot_sigma(model_fit)
rlang::last_error()
model_fit <- abcox_fit(model,PARALLEL_EXECUTION = F)
library(abcoxph)
abcoxph:::Q_matrix_rw2()
abcoxph:::Q_matrix_rw2
library(abcoxph)
library(abcoxph)
abcoxph:::Q_matrix_rw2
library(abcoxph)
library(survival)
options(mc.cores = 2L)
data <- survival::kidney
data <- data.frame(time = data$time, status = data$status, age = data$age,sex = data$sex,GN = ifelse(data$disease == "GN",1,0),AN = ifelse(data$disease == "AN",1,0),PKD = ifelse(data$disease == "PKD",1,0), id = data$id)
prior <- prior_setup(theta_number = 30, theta_grid = c(-2,10),theta_prior_a = .5,theta_prior_u = 2)
model <- abcoxph_setup(time~age + sex + GN + AN + PKD + id(id), cens = "status",data = data)
proposed_model <- abcox_fit(model,F)
plot_sigma(proposed_model)
library(tidyverse)
library(ggplot2)
plot_sigma(proposed_model)
model
proposed_model
plot_sigma(proposed_model)
plot_theta(proposed_model)
options(mc.cores = 2L)
data <- survival::kidney
data <- data.frame(time = data$time, status = data$status, age = data$age,sex = data$sex,GN = ifelse(data$disease == "GN",1,0),AN = ifelse(data$disease == "AN",1,0),PKD = ifelse(data$disease == "PKD",1,0), id = data$id)
prior <- prior_setup(theta_number = 30, theta_grid = c(-2,10),theta_prior_a = .5,theta_prior_u = 2)
model <- abcoxph_setup(time~age + sex + GN + AN + PKD + id(id), cens = "status",data = data)
proposed_model <- abcox_fit(model,PARALLEL_EXECUTION = F)
plot_sigma(proposed_model)
plot_theta(proposed_model)
proposed_model
coxphfit <- coxph(Surv(time, status) ~ age + sex + GN + AN + PKD + frailty(id,dist = "gauss", sparse = F), data=data,ties = "breslow")
coxphfit$coefficients
coxphfit
coxphfit$coefficients
data2 <- arrange_data(data)
coxphfit <- coxph(Surv(time, status) ~ age + sex + GN + AN + PKD + frailty(id,dist = "gauss", sparse = F), data=data2,ties = "breslow")
coxphfit$coefficients
data2 <- abcoxph:::arrange_data(data)
coxphfit <- coxph(Surv(time, status) ~ age + sex + GN + AN + PKD + frailty(id,dist = "gauss", sparse = F), data=data2,ties = "breslow")
coxphfit$coefficients
data
abcoxph:::arrange_data(data)
Q
library(abcoxph)
library(survival)
library(tidyverse)
library(ggplot2)
options(mc.cores = 2L)
data <- survival::kidney
data <- data.frame(time = data$time, status = data$status, age = data$age,sex = data$sex,GN = ifelse(data$disease == "GN",1,0),AN = ifelse(data$disease == "AN",1,0),PKD = ifelse(data$disease == "PKD",1,0), id = data$id)
prior <- prior_setup(theta_number = 30, theta_grid = c(-2,10),theta_prior_a = .5,theta_prior_u = 2)
model <- abcoxph_setup(time~age + sex + GN + AN + PKD + id(id), cens = "status",data = data)
proposed_model <- abcox_fit(model,PARALLEL_EXECUTION = F)
plot_sigma(proposed_model)
plot_theta(proposed_model)
data2 <- abcoxph:::arrange_data(data)
data
data2 <- data
data2$times = data2$time
data2 <- abcoxph:::arrange_data(data2)
coxphfit <- coxph(Surv(time, status) ~ age + sex + GN + AN + PKD + frailty(id,dist = "gauss", sparse = F), data=data2,ties = "breslow")
coxphfit$coefficients
coxphfit <- coxph(Surv(time, status) ~ age + sex + GN + AN + PKD + frailty(id,dist = "gauss", sparse = F), data=data,ties = "breslow")
coxphfit$coefficients
coxphfit
summary(coxphfit)
hyper_sd_coxph <- sqrt(0.4829065)
hyper_sd_coxph
library(ggplot2)
library(tidyverse)
library(latex2exp)
#### Plot of baseline hazard:
TEXT_SIZE <- 30
theme_set(theme_classic(base_size = 15))
### Define true to be a dataframe with time and hazard, two columns
p1 <- ggplot(data = true) + aes(x = time, y = hazard) + geom_line() +ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(), text = element_text(size = TEXT_SIZE)) + labs(x = "t", y = TeX('$h_{0}(t)$'))
p2 <- ggplot()  + geom_line(data = true[1:round(length(haz)/3),],aes(x = time[1:round(length(haz)/3)], y = hazard[1:round(length(haz)/3)])) +
geom_line(aes_string(x = tdom[(round(length(haz)/3) + 1):(round(2*length(haz))/3)], y = haz[(round(length(haz)/3) + 1):(round(2*length(haz))/3)])) +
geom_line(aes_string(x = tdom[(round(2*length(haz)/3) + 1):length(haz)], y = haz[(round(2*length(haz)/3) + 1):length(haz)])) +
ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(), text = element_text(size = TEXT_SIZE)) + labs(x = "t", y = TeX('$h_{0}(t)$'))
#### Plot of smoothing result with true function:
plot_smooth_withtrue <- function(proposed_model,truefun,TEXT_SIZE){
theme_set(theme_classic(base_size = 15))
RW2BINS <- proposed_model$model_data$RW2BINS
model_data <- proposed_model$model_data
margmeanall <- proposed_model$marginal_latent$marginal_mean_smoothing
margsd <- proposed_model$marginal_latent$marginal_sd_smoothing
simplot <- dplyr::tibble(
x = sort(unique(model_data$A[[1]]$u)),
mymean = margmeanall,
mymeanlower = mymean - 2*margsd,
mymeanupper = mymean + 2*margsd
) %>%
ggplot2::ggplot(ggplot2::aes(x = x)) +
ggplot2::ylim(0,10) +
ggplot2::geom_ribbon(ggplot2::aes(ymin = exp(mymeanlower),ymax = ifelse(exp(mymeanupper)>10,10,exp(mymeanupper))),fill = "orange",alpha = .2) +
ggplot2::geom_line(ggplot2::aes(y = exp(mymean),color = "Proposed")) +
geom_line(aes(y = exp(truefunc(x) - truefunc(x[round(RW2BINS/2)])),color = "True")) + labs(x = "u", y =  TeX('$exp(\\gamma(u)$)')) +
scale_colour_manual(values=c("blue","black")) + ggplot2::theme(legend.position = c(.75, .92),legend.title = element_blank(),text = element_text(size = TEXT_SIZE),legend.background = element_blank())
simplot
}
#### Plot of smoothing result without true function:
plot_smooth <- function(proposed_model,TEXT_SIZE){
theme_set(theme_classic(base_size = 15))
RW2BINS <- proposed_model$model_data$RW2BINS
model_data <- proposed_model$model_data
margmeanall <- proposed_model$marginal_latent$marginal_mean_smoothing
margsd <- proposed_model$marginal_latent$marginal_sd_smoothing
simplot <- dplyr::tibble(
x = sort(unique(model_data$A[[1]]$u)),
mymean = margmeanall,
mymeanlower = mymean - 2*margsd,
mymeanupper = mymean + 2*margsd
) %>%
ggplot2::ggplot(ggplot2::aes(x = x)) +
ggplot2::ylim(0.5,1.5) +
ggplot2::geom_ribbon(ggplot2::aes(ymin = exp(mymeanlower),ymax = ifelse(exp(mymeanupper)>10,10,exp(mymeanupper))),fill = "orange",alpha = .2) +
ggplot2::geom_line(ggplot2::aes(y = exp(mymean),color = "Proposed")) +
labs(x = "u", y =  TeX('$exp(\\gamma(u)$)')) +
scale_colour_manual(values=c("blue")) + ggplot2::theme(legend.position = c(.75, .92),legend.title = element_blank(),text = element_text(size = TEXT_SIZE),legend.background = element_blank())
simplot
}
#### Plot of posterior distribution of hyper-parameter
plot_hyper <- function(abcoxfit, TEXT_SIZE){
theme_set(theme_classic(base_size = 15))
priorfuncsigma <- function(x) (2/x) * exp(abcoxfit$theta_logprior(-2*log(x)))
margpost1 <- abcoxfit$marginal_hyper
sigmapostplot1 <- margpost1$margpost %>%
mutate(sigma_post = exp(sigmalogmargpost)) %>%
ggplot2::ggplot(ggplot2::aes(x = sigma)) +
ggplot2::theme_classic() +
ggplot2::geom_line(ggplot2::aes(y = sigma_post,colour = "Proposed"),,size = 0.5) +
ggplot2::labs(x = TeX('$\\sigma'),y = "Density") +
ggplot2::geom_line(ggplot2::aes(y = priorfuncsigma(sigma),colour = "Prior"), size = 0.5) +
ggplot2::scale_colour_manual(values = c("black","blue")) +
ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(), text = element_text(size = TEXT_SIZE))
sigmapostplot1
}
plot_hyper(model_fit,30)
p1 <- plot_hyper(proposed_model,30)
p1
p1 <- p1 + geom_vline(xintercept = hyper_sd_coxph)
p1
p1 <- p1 + geom_vline(xintercept = hyper_sd_coxph, color = "red")
p1
p1 <- p1 + geom_vline(xintercept = hyper_sd_coxph, color = "red") + ggplot2::scale_colour_manual(values=c("black","blue",'red'))
p1
hyper_sd_coxph
plot_hyper_kid <- function(abcoxfit, TEXT_SIZE){
theme_set(theme_classic(base_size = 15))
priorfuncsigma <- function(x) (2/x) * exp(abcoxfit$theta_logprior(-2*log(x)))
margpost1 <- abcoxfit$marginal_hyper
sigmapostplot1 <- margpost1$margpost %>%
mutate(sigma_post = exp(sigmalogmargpost)) %>%
ggplot2::ggplot(ggplot2::aes(x = sigma)) +
ggplot2::theme_classic() +
ggplot2::geom_line(ggplot2::aes(y = sigma_post,colour = "Proposed"),,size = 0.5) +
ggplot2::labs(x = TeX('$\\sigma'),y = "Density") +
ggplot2::geom_line(ggplot2::aes(y = priorfuncsigma(sigma),colour = "Prior"), size = 0.5) +
ggplot2::geom_vline(xintercept = 0.695, color = "red") +
ggplot2::scale_colour_manual(values=c("black","blue",'red')) +
ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(), text = element_text(size = TEXT_SIZE))
sigmapostplot1
}
p1 <- plot_hyper_kid(proposed_model,30)
p1
plot_hyper_kid <- function(abcoxfit, TEXT_SIZE){
theme_set(theme_classic(base_size = 15))
priorfuncsigma <- function(x) (2/x) * exp(abcoxfit$theta_logprior(-2*log(x)))
margpost1 <- abcoxfit$marginal_hyper
sigmapostplot1 <- margpost1$margpost %>%
mutate(sigma_post = exp(sigmalogmargpost)) %>%
ggplot2::ggplot(ggplot2::aes(x = sigma)) +
ggplot2::theme_classic() +
ggplot2::geom_line(ggplot2::aes(y = sigma_post,colour = "Proposed"),,size = 0.5) +
ggplot2::labs(x = TeX('$\\sigma'),y = "Density") +
ggplot2::geom_line(ggplot2::aes(y = priorfuncsigma(sigma),colour = "Prior"), size = 0.5) +
ggplot2::geom_vline(ggplot2::ase(xintercept = 0.695, colour = "PL Estimate")) +
ggplot2::scale_colour_manual(values=c("black","blue",'red')) +
ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(), text = element_text(size = TEXT_SIZE))
sigmapostplot1
}
p1 <- plot_hyper_kid(proposed_model,30)
plot_hyper_kid <- function(abcoxfit, TEXT_SIZE){
theme_set(theme_classic(base_size = 15))
priorfuncsigma <- function(x) (2/x) * exp(abcoxfit$theta_logprior(-2*log(x)))
margpost1 <- abcoxfit$marginal_hyper
sigmapostplot1 <- margpost1$margpost %>%
mutate(sigma_post = exp(sigmalogmargpost)) %>%
ggplot2::ggplot(ggplot2::aes(x = sigma)) +
ggplot2::theme_classic() +
ggplot2::geom_line(ggplot2::aes(y = sigma_post,colour = "Proposed"),,size = 0.5) +
ggplot2::labs(x = TeX('$\\sigma'),y = "Density") +
ggplot2::geom_line(ggplot2::aes(y = priorfuncsigma(sigma),colour = "Prior"), size = 0.5) +
ggplot2::geom_vline(ggplot2::aes(xintercept = 0.695, colour = "PL Estimate")) +
ggplot2::scale_colour_manual(values=c("black","blue",'red')) +
ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(), text = element_text(size = TEXT_SIZE))
sigmapostplot1
}
plot_hyper_kid <- function(abcoxfit, TEXT_SIZE){
theme_set(theme_classic(base_size = 15))
priorfuncsigma <- function(x) (2/x) * exp(abcoxfit$theta_logprior(-2*log(x)))
margpost1 <- abcoxfit$marginal_hyper
sigmapostplot1 <- margpost1$margpost %>%
mutate(sigma_post = exp(sigmalogmargpost)) %>%
ggplot2::ggplot(ggplot2::aes(x = sigma)) +
ggplot2::theme_classic() +
ggplot2::geom_line(ggplot2::aes(y = sigma_post,colour = "Proposed"),,size = 0.5) +
ggplot2::labs(x = TeX('$\\sigma'),y = "Density") +
ggplot2::geom_line(ggplot2::aes(y = priorfuncsigma(sigma),colour = "Prior"), size = 0.5) +
ggplot2::geom_vline(ggplot2::aes(xintercept = 0.695, colour = "PL Estimate")) +
ggplot2::scale_colour_manual(values=c("black","blue",'red')) +
ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(), text = element_text(size = TEXT_SIZE))
sigmapostplot1
}
p1 <- plot_hyper_kid(proposed_model,30)
p1
plot_hyper_kid <- function(abcoxfit, TEXT_SIZE){
theme_set(theme_classic(base_size = 15))
priorfuncsigma <- function(x) (2/x) * exp(abcoxfit$theta_logprior(-2*log(x)))
margpost1 <- abcoxfit$marginal_hyper
sigmapostplot1 <- margpost1$margpost %>%
mutate(sigma_post = exp(sigmalogmargpost)) %>%
ggplot2::ggplot(ggplot2::aes(x = sigma)) +
ggplot2::theme_classic() +
ggplot2::geom_line(ggplot2::aes(y = sigma_post,colour = "Proposed"),,size = 0.5) +
ggplot2::labs(x = TeX('$\\sigma'),y = "Density") +
ggplot2::geom_line(ggplot2::aes(y = priorfuncsigma(sigma),colour = "Prior"), size = 0.5) +
ggplot2::geom_vline(ggplot2::aes(xintercept = 0.695, colour = "PL Estimate")) +
ggplot2::scale_colour_manual(values=c('red',"black","blue")) +
ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(), text = element_text(size = TEXT_SIZE))
sigmapostplot1
}
p1 <- plot_hyper_kid(proposed_model,30)
p1
summary(coxphfit)
proposed_model$marginal_latent$marginal_mean_iid
coxphfit$coefficients
coxphfit$coefficients[-c(1:5)]
RE_SD_ours <- proposed_model$marginal_latent$marginal_sd_iid[1:5]
RE_SD_ours
coxphfit$var
diag(coxphfit$var)
sd(diag(coxphfit$var))
sqrt(diag(coxphfit$var))
coxphfit$coefficients
coxphfit$coefficients[5]
coxphfit$coefficients[6\]
coxphfit$coefficients[6]
0.5099325 + 1.96 * 0.59559952
exp(1.677308)
RE_Mean_theirs <- coxphfit$coefficients[-1:5]
RE_Mean_theirs <- coxphfit$coefficients[-c(1:5)]
RE_Mean_theirs
RE_Mean_theirs <- as.numeric(coxphfit$coefficients[-c(1:5)])
RE_Mean_theirs
RE_SD_theirs <- as.numeric(sqrt(diag(coxphfit$var))[-c(1:5)])
RE_SD_theirs
RE_SD_ours
RE_Mean_ours <- proposed_model$marginal_latent$marginal_mean_iid[1:5]
RE_SD_ours <- proposed_model$marginal_latent$marginal_sd_iid[1:5]
RE_Mean_theirs <- as.numeric(coxphfit$coefficients[-c(1:5)])[1:5]
RE_SD_theirs <- as.numeric(sqrt(diag(coxphfit$var))[-c(1:5)])[1:5]
RE_Mean_ours
RE_Mean_theirs
RE_SD_ours
RE_SD_theirs
RE_SD_theirs1 <- as.numeric(sqrt(diag(coxphfit$var))[-c(1:5)])[1:5]
RE_Mean_ours <- proposed_model$marginal_latent$marginal_mean_iid[1:5]
RE_SD_ours <- proposed_model$marginal_latent$marginal_sd_iid[1:5]
RE_Mean_theirs <- as.numeric(coxphfit$coefficients[-c(1:5)])[1:5]
RE_SD_theirs1 <- as.numeric(sqrt(diag(coxphfit$var))[-c(1:5)])[1:5]
RE_SD_theirs2 <- as.numeric(sqrt(diag(coxphfit$var2))[-c(1:5)])[1:5]
RE_Mean_ours
RE_SD_ours
RE_Mean_theirs
RE_SD_theirs1
RE_SD_theirs2
our_CI_up <- RE_Mean_ours + 2 * RE_SD_ours
our_CI_low <- RE_Mean_ours - 2 * RE_SD_ours
their_CI_up1 <- RE_Mean_theirs + 2 * RE_SD_theirs1
their_CI_up2 <- RE_Mean_theirs + 2 * RE_SD_theirs1
their_CI_low1 <- RE_Mean_theirs - 2 * RE_SD_theirs1
their_CI_low2 <- RE_Mean_theirs - 2 * RE_SD_theirs2
exp(their_CI_up1)
exp(their_CI_low1)
summary(coxphfit)
our_CI_up <- RE_Mean_ours + 1.96 * RE_SD_ours
our_CI_low <- RE_Mean_ours - 1.96 * RE_SD_ours
their_CI_up1 <- RE_Mean_theirs + 1.96 * RE_SD_theirs1
their_CI_up2 <- RE_Mean_theirs + 1.96 * RE_SD_theirs1
their_CI_low1 <- RE_Mean_theirs - 1.96 * RE_SD_theirs1
their_CI_low2 <- RE_Mean_theirs - 1.96 * RE_SD_theirs2
their_CI_up1
their_CI_low1
summary(coxphfit)
RE_Mean_ours <- proposed_model$marginal_latent$marginal_mean_iid[1:5]
RE_SD_ours <- proposed_model$marginal_latent$marginal_sd_iid[1:5]
our_CI_up <- RE_Mean_ours + 1.96 * RE_SD_ours
our_CI_low <- RE_Mean_ours - 1.96 * RE_SD_ours
RE_Mean_theirs <- as.numeric(coxphfit$coefficients[-c(1:5)])[1:5]
RE_SD_theirs1 <- as.numeric(sqrt(diag(coxphfit$var))[-c(1:5)])[1:5]
RE_SD_theirs2 <- as.numeric(sqrt(diag(coxphfit$var2))[-c(1:5)])[1:5]
their_CI_up1 <- RE_Mean_theirs + 1.96 * RE_SD_theirs1
their_CI_up2 <- RE_Mean_theirs + 1.96 * RE_SD_theirs1
their_CI_low1 <- RE_Mean_theirs - 1.96 * RE_SD_theirs1
their_CI_low2 <- RE_Mean_theirs - 1.96 * RE_SD_theirs2
their_CI_low1
exp(their_CI_up1)
exp(their_CI_low1)
summary(coxphfit)
fra_data <- data_frame(fra_id <- c(1:5), our_CI_up = our_CI_up, our_CI_low = our_CI_low, their_CI_up1 = their_CI_up1, their_CI_low1 = their_CI_low1, their_CI_up2 = their_CI_up2 , their_CI_low2 = their_CI_low2)
fra_data <- data_frame(fra_id <- c(1:5), our_CI_up = our_CI_up, our_CI_low = our_CI_low, their_CI_up1 = their_CI_up1, their_CI_low1 = their_CI_low1, their_CI_up2 = their_CI_up2 , their_CI_low2 = their_CI_low2)
fra_data
fra_data <- data_frame(fra_id = c(1:5), our_CI_up = our_CI_up, our_CI_low = our_CI_low, their_CI_up1 = their_CI_up1, their_CI_low1 = their_CI_low1, their_CI_up2 = their_CI_up2 , their_CI_low2 = their_CI_low2)
fra_data
ggplot(data = fra_data, aes(x = fra_id)) +geom_errorbar(width=.1, aes(ymin=our_CI_low, ymax=our_CI_up), colour="red")
ggplot(data = fra_data, aes(x = fra_id)) + geom_errorbar(width=.1, aes(ymin=our_CI_low, ymax=our_CI_up), colour="red") + geom_errorbar(width=.1, aes(ymin=their_CI_low1, ymax=their_CI_up1), colour="BLUE")
ggplot(data = fra_data, aes(x = fra_id)) + geom_errorbar(width=.1, aes(ymin=our_CI_low, ymax=our_CI_up), colour="red") + geom_errorbar(width=.05, aes(ymin=their_CI_low1, ymax=their_CI_up1), colour="BLUE")
ggplot(data = fra_data, aes(x = fra_id)) + geom_errorbar(width=.1, aes(ymin=our_CI_low, ymax=our_CI_up), colour="red") + geom_errorbar(width=0.1, aes(ymin=their_CI_low1, ymax=their_CI_up1), colour="BLUE")
fra_data <- data_frame(fra_id = c(1:5), our_CI_up = our_CI_up, our_CI_low = our_CI_low, their_CI_up1 = their_CI_up1, their_CI_low1 = their_CI_low1, their_CI_up2 = their_CI_up2 , their_CI_low2 = their_CI_low2)
ggplot(data = fra_data, aes(x = fra_id)) + geom_errorbar(width=.1, aes(ymin=our_CI_low, ymax=our_CI_up), colour="red") +
geom_errorbar(width=0.1, aes(ymin=their_CI_low1, ymax=their_CI_up1), colour="BLUE") +
geom_errorbar(width=0.1, aes(ymin=their_CI_low2, ymax=their_CI_up2), colour="PURPLE")
fra_data <- data_frame(fra_id = c(1:5), our_CI_up = our_CI_up, our_CI_low = our_CI_low, their_CI_up1 = their_CI_up1, their_CI_low1 = their_CI_low1, their_CI_up2 = their_CI_up2 , their_CI_low2 = their_CI_low2)
ggplot(data = fra_data, aes(x = fra_id)) + geom_errorbar(width=.1, aes(ymin=our_CI_low, ymax=our_CI_up), colour="red") +
geom_errorbar(width=0.1, aes(ymin=their_CI_low1, ymax=their_CI_up1), colour="BLUE") +
geom_errorbar(width=0.1, aes(ymin=their_CI_low2, ymax=their_CI_up2), colour="YELLOW")
fra_data <- data_frame(fra_id = c(1:5), our_CI_up = our_CI_up, our_CI_low = our_CI_low, their_CI_up1 = their_CI_up1, their_CI_low1 = their_CI_low1, their_CI_up2 = their_CI_up2 , their_CI_low2 = their_CI_low2)
ggplot(data = fra_data, aes(x = fra_id)) + geom_errorbar(width=.1, aes(ymin=our_CI_low, ymax=our_CI_up), colour="red") +
geom_errorbar(width=0.1, aes(ymin=their_CI_low1, ymax=their_CI_up1), colour="BLUE") +
geom_errorbar(width=0.1, aes(ymin=their_CI_low2, ymax=their_CI_up2), colour="GREEN")
their_CI_up2
their_CI_up1
RE_Mean_ours <- proposed_model$marginal_latent$marginal_mean_iid[1:5]
RE_SD_ours <- proposed_model$marginal_latent$marginal_sd_iid[1:5]
our_CI_up <- RE_Mean_ours + 1.96 * RE_SD_ours
our_CI_low <- RE_Mean_ours - 1.96 * RE_SD_ours
RE_Mean_theirs <- as.numeric(coxphfit$coefficients[-c(1:5)])[1:5]
RE_SD_theirs1 <- as.numeric(sqrt(diag(coxphfit$var))[-c(1:5)])[1:5]
RE_SD_theirs2 <- as.numeric(sqrt(diag(coxphfit$var2))[-c(1:5)])[1:5]
their_CI_up1 <- RE_Mean_theirs + 1.96 * RE_SD_theirs1
their_CI_up2 <- RE_Mean_theirs + 1.96 * RE_SD_theirs2
their_CI_low1 <- RE_Mean_theirs - 1.96 * RE_SD_theirs1
their_CI_low2 <- RE_Mean_theirs - 1.96 * RE_SD_theirs2
fra_data <- data_frame(fra_id = c(1:5), our_CI_up = our_CI_up, our_CI_low = our_CI_low, their_CI_up1 = their_CI_up1, their_CI_low1 = their_CI_low1, their_CI_up2 = their_CI_up2 , their_CI_low2 = their_CI_low2)
ggplot(data = fra_data, aes(x = fra_id)) + geom_errorbar(width=.1, aes(ymin=our_CI_low, ymax=our_CI_up), colour="red") +
geom_errorbar(width=0.1, aes(ymin=their_CI_low1, ymax=their_CI_up1), colour="BLUE") +
geom_errorbar(width=0.1, aes(ymin=their_CI_low2, ymax=their_CI_up2), colour="GREEN")
fra_data <- data_frame(fra_id = c(1:5), our_CI_up = our_CI_up, our_CI_low = our_CI_low, their_CI_up1 = their_CI_up1, their_CI_low1 = their_CI_low1, their_CI_up2 = their_CI_up2 , their_CI_low2 = their_CI_low2)
ggplot(data = fra_data, aes(x = fra_id)) + geom_errorbar(width=.1, aes(ymin=our_CI_low, ymax=our_CI_up), colour="Proposed") +
geom_errorbar(width=0.1, aes(ymin=their_CI_low1, ymax=their_CI_up1), colour="PL1") +
geom_errorbar(width=0.1, aes(ymin=their_CI_low2, ymax=their_CI_up2), colour="PL2") +
ggplot2::labs(x = "Fraility ID",y = "Estimated 95 percent Interval") +
ggplot2::scale_colour_manual(values=c('green',"blue","red")) +
ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(), text = element_text(size = TEXT_SIZE))
fra_data <- data_frame(fra_id = c(1:5), our_CI_up = our_CI_up, our_CI_low = our_CI_low, their_CI_up1 = their_CI_up1, their_CI_low1 = their_CI_low1, their_CI_up2 = their_CI_up2 , their_CI_low2 = their_CI_low2)
ggplot(data = fra_data, aes(x = fra_id)) + geom_errorbar(width=.1, aes(ymin=our_CI_low, ymax=our_CI_up,colour="Proposed")) +
geom_errorbar(width=0.1, aes(ymin=their_CI_low1, ymax=their_CI_up1, colour="PL1")) +
geom_errorbar(width=0.1, aes(ymin=their_CI_low2, ymax=their_CI_up2, colour="PL2")) +
ggplot2::labs(x = "Fraility ID",y = "Estimated 95 percent Interval") +
ggplot2::scale_colour_manual(values=c('green',"blue","red")) +
ggplot2::theme(legend.position = c(.85, .85),legend.title = element_blank(), text = element_text(size = TEXT_SIZE))
fra_data <- data_frame(fra_id = c(1:5), our_CI_up = our_CI_up, our_CI_low = our_CI_low, their_CI_up1 = their_CI_up1, their_CI_low1 = their_CI_low1, their_CI_up2 = their_CI_up2 , their_CI_low2 = their_CI_low2)
ggplot(data = fra_data, aes(x = fra_id)) + geom_errorbar(width=.1, aes(ymin=our_CI_low, ymax=our_CI_up,colour="Proposed")) +
geom_errorbar(width=0.1, aes(ymin=their_CI_low1, ymax=their_CI_up1, colour="PL1")) +
geom_errorbar(width=0.1, aes(ymin=their_CI_low2, ymax=their_CI_up2, colour="PL2")) +
ggplot2::labs(x = "Fraility ID",y = "Estimated effect") +
ggplot2::scale_colour_manual(values=c('green',"blue","red")) +
ggplot2::theme(legend.position = c(.95, .95),legend.title = element_blank(), text = element_text(size = TEXT_SIZE))
fra_data <- data_frame(fra_id = c(1:5), our_CI_up = our_CI_up, our_CI_low = our_CI_low, their_CI_up1 = their_CI_up1, their_CI_low1 = their_CI_low1, their_CI_up2 = their_CI_up2 , their_CI_low2 = their_CI_low2)
ggplot(data = fra_data, aes(x = fra_id)) + geom_errorbar(width=.1, aes(ymin=our_CI_low, ymax=our_CI_up,colour="Proposed")) +
geom_errorbar(width=0.1, aes(ymin=their_CI_low1, ymax=their_CI_up1, colour="PL1")) +
geom_errorbar(width=0.1, aes(ymin=their_CI_low2, ymax=their_CI_up2, colour="PL2")) +
ggplot2::labs(x = "Fraility ID",y = "Estimated effect") +
ggplot2::scale_colour_manual(values=c('green',"blue","red")) +
ggplot2::theme(legend.position = c(.9, .9),legend.title = element_blank(), text = element_text(size = TEXT_SIZE))
fra_data <- data_frame(fra_id = c(1:5), our_CI_up = our_CI_up, our_CI_low = our_CI_low, their_CI_up1 = their_CI_up1, their_CI_low1 = their_CI_low1, their_CI_up2 = their_CI_up2 , their_CI_low2 = their_CI_low2)
ggplot(data = fra_data, aes(x = fra_id)) + geom_errorbar(width=.1, aes(ymin=our_CI_low, ymax=our_CI_up,colour="Proposed")) +
geom_errorbar(width=0.1, aes(ymin=their_CI_low1, ymax=their_CI_up1, colour="PL1")) +
geom_errorbar(width=0.1, aes(ymin=their_CI_low2, ymax=their_CI_up2, colour="PL2")) +
ggplot2::labs(x = "Fraility ID",y = "Estimated effect") +
ggplot2::scale_colour_manual(values=c('blue',"green","red")) +
ggplot2::theme(legend.position = c(.9, .9),legend.title = element_blank(), text = element_text(size = TEXT_SIZE))
summary(coxphfit)
?coxph
summary(coxphfit)
print
print(0.54146,digits = 3)
print(0.54146,digits = 4)
library(abcoxph)
